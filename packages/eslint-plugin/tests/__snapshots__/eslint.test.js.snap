// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Validate ESLint rules for jest should flag invalid style for files with jest extension 1`] = `
Array [
  Object {
    "column": 3,
    "endColumn": 14,
    "endLine": 3,
    "line": 3,
    "message": "Test is missing function argument",
    "messageId": "missingFunction",
    "nodeType": "CallExpression",
    "ruleId": "jest/no-disabled-tests",
    "severity": 1,
  },
  Object {
    "column": 3,
    "endColumn": 14,
    "endLine": 3,
    "line": 3,
    "message": "Test has no assertions",
    "messageId": "noAssertions",
    "nodeType": "CallExpression",
    "ruleId": "jest/expect-expect",
    "severity": 1,
  },
  Object {
    "column": 3,
    "endColumn": 18,
    "endLine": 4,
    "line": 4,
    "message": "Test has no assertions",
    "messageId": "noAssertions",
    "nodeType": "CallExpression",
    "ruleId": "jest/expect-expect",
    "severity": 1,
  },
  Object {
    "column": 6,
    "endColumn": 10,
    "endLine": 4,
    "line": 4,
    "message": "Unexpected focused test.",
    "messageId": "focusedTest",
    "nodeType": "Identifier",
    "ruleId": "jest/no-focused-tests",
    "severity": 2,
    "suggestions": Array [
      Object {
        "desc": "Remove focus from test.",
        "fix": Object {
          "range": Array [
            77,
            82,
          ],
          "text": "",
        },
        "messageId": "suggestRemoveFocus",
      },
    ],
  },
  Object {
    "column": 3,
    "endColumn": 5,
    "endLine": 9,
    "line": 7,
    "message": "Test has no assertions",
    "messageId": "noAssertions",
    "nodeType": "CallExpression",
    "ruleId": "jest/expect-expect",
    "severity": 1,
  },
  Object {
    "column": 3,
    "endColumn": 5,
    "endLine": 14,
    "line": 12,
    "message": "Skipped test suite",
    "messageId": "skippedTestSuite",
    "nodeType": "CallExpression",
    "ruleId": "jest/no-disabled-tests",
    "severity": 1,
  },
  Object {
    "column": 5,
    "endColumn": 17,
    "endLine": 13,
    "line": 13,
    "message": "Expect must be inside of a test block.",
    "messageId": "unexpectedExpect",
    "nodeType": "CallExpression",
    "ruleId": "jest/no-standalone-expect",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 5,
    "endLine": 18,
    "line": 16,
    "message": "Skipped test",
    "messageId": "skippedTest",
    "nodeType": "CallExpression",
    "ruleId": "jest/no-disabled-tests",
    "severity": 1,
  },
  Object {
    "column": 3,
    "endColumn": 5,
    "endLine": 21,
    "line": 19,
    "message": "Skipped test",
    "messageId": "skippedTest",
    "nodeType": "CallExpression",
    "ruleId": "jest/no-disabled-tests",
    "severity": 1,
  },
  Object {
    "column": 13,
    "endColumn": 18,
    "endLine": 19,
    "line": 19,
    "message": "Test title is used multiple times in the same describe block.",
    "messageId": "multipleTestTitle",
    "nodeType": "Literal",
    "ruleId": "jest/no-identical-title",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 17,
    "endLine": 24,
    "line": 24,
    "message": "Do not export from a test file.",
    "messageId": "unexpectedExport",
    "nodeType": "MemberExpression",
    "ruleId": "jest/no-export",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 21,
    "endLine": 32,
    "line": 32,
    "message": "Test title is used multiple times in the same describe block.",
    "messageId": "multipleTestTitle",
    "nodeType": "Literal",
    "ruleId": "jest/no-identical-title",
    "severity": 2,
  },
]
`;

exports[`Validate ESLint rules for ts should flag invalid style for files with ts extension 1`] = `Array []`;
